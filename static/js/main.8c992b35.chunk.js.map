{"version":3,"sources":["audio/arrow.mp3","images/clock.jpg","components/clock-styles.js","components/Clock.js","utils/utils.js","App.js","index.js"],"names":["useStyles","createUseStyles","container","position","width","marginLeft","marginRight","soundToggle","left","top","border","borderRadius","height","padding","clock","display","content","backgroundColor","arrow","bottom","transformOrigin","arrowSec","animation","transform","useStylesProps","renderSecs","arrowMin","renderMins","arrowHour","renderHours","Time","useState","Date","now","time","setTime","Audio","arrowSound","isOnSound","setIsOnSound","intervalId","useRef","hours","mins","Math","floor","secs","getTime","classes","arrowSecStyles","arrowMinStyles","arrowHourStyles","useEffect","current","window","setInterval","play","clearInterval","className","dot","src","clockImg","alt","type","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,MAA0B,kCCA1B,MAA0B,kC,OCgF1BA,EA9EGC,YAAgB,CAChCC,UAAW,CACTC,SAAU,WACVC,MAAO,KAEPC,WAAY,OACZC,YAAa,QAGfC,YAAa,CACXJ,SAAU,WACVK,KAAM,IACNC,IAAK,OACLC,OAAQ,kBACRC,aAAc,EACdP,MAAO,GACPQ,OAAQ,GACRC,QAAS,EACTR,WAAY,OACZC,YAAa,QAEfQ,MAAO,CACLR,YAAa,OACbD,WAAY,OACZF,SAAU,WAEVC,MAAO,IACPQ,OAAQ,IAER,WAAY,CACVT,SAAU,WACVY,QAAS,QACTC,QAAS,KACTR,KAAM,MACNC,IAAK,MACLL,MAAO,KACPQ,OAAQ,KACRF,OAAQ,kBACRC,aAAc,MACdM,gBAAiB,UAIrBC,MAAO,CACLf,SAAU,WACVY,QAAS,QACTP,KAAM,MACNW,OAAQ,MACRH,QAAS,GACTC,gBAAiB,QACjBG,gBAAiB,iBAGnBC,SAAU,CACRjB,MAAO,OACPQ,OAAQ,MACRU,UAAW,kDACXC,UAAW,SAACC,GAAD,uBAA8BA,EAAeC,WAA7C,UAEbC,SAAU,CACRtB,MAAO,OACPQ,OAAQ,MACRF,OAAQ,kBACRC,aAAc,MACdW,UAAW,oDACXC,UAAW,SAACC,GAAD,uBAA8BA,EAAeG,WAA7C,UAGbC,UAAW,CACTxB,MAAO,OACPQ,OAAQ,MACRF,OAAQ,kBACRC,aAAc,MACdW,UAAW,sDACXC,UAAW,SAACC,GAAD,uBAA8BA,EAAeK,YAA7C,Y,OCtEA,SAASC,IACtB,MAAwBC,mBAASC,KAAKC,MAAQ,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgBJ,mBAAS,IAAIK,MAAMC,IAA5BnB,EAAP,oBACA,EAAkCa,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAaC,iBAAO,GAI1B,ECdqB,SAACP,GAItB,MAAO,CAAEQ,MAHMR,EAAI,MAAL,KAGES,KAFHC,KAAKC,MAAOX,EAAI,KAAL,KAEFY,KADTF,KAAKC,MAAOX,EAAI,IAAkB,MDWjBa,CAAQb,GAA9BS,EAAR,EAAQA,KAAMG,EAAd,EAAcA,KAAMJ,EAApB,EAAoBA,MAMdM,EAAUhD,EADO,CAAEyB,WAJC,EAAPqB,EAIkBnB,WAHX,EAAPgB,EAG8Bd,YAFrB,GAARa,IAIdO,EAAc,UAAMD,EAAQ9B,MAAd,YAAuB8B,EAAQ3B,UAC7C6B,EAAc,UAAMF,EAAQ9B,MAAd,YAAuB8B,EAAQtB,UAC7CyB,EAAe,UAAMH,EAAQ9B,MAAd,YAAuB8B,EAAQpB,WAapD,OAXAwB,qBAAU,WAQR,OANEZ,EAAWa,QAAUC,OAAOC,aAAY,WACtCpB,EAAQH,KAAKC,MAAQ,MACrBK,GAAapB,EAAMsC,SAClB,KAGE,kBAAMC,cAAcjB,EAAWa,YACrC,CAACnB,EAAMhB,EAAOoB,IAGf,mCACE,sBAAKoB,UAAWV,EAAQ9C,UAAxB,UACE,sBAAKwD,UAAWV,EAAQlC,MAAxB,UACE,qBAAK4C,UAAS,UAAKV,EAAQ9B,MAAb,YAAsB8B,EAAQW,OAC5C,qBAAKD,UAAWT,IAChB,qBAAKS,UAAWR,IAChB,qBAAKQ,UAAWP,IAChB,qBAAKS,IAAKC,EAAUC,IAAI,QAAQ1D,MAAM,WAExC,wBACE2D,KAAK,SACLC,QArCY,WAClBzB,GAAcD,IAqCRoB,UAAWV,EAAQzC,YAHrB,SAKG+B,EAAY,WAAa,kBE7CrB2B,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8c992b35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow.7b8874ca.mp3\";","export default __webpack_public_path__ + \"static/media/clock.70f4c541.jpg\";","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    position: \"relative\",\r\n    width: 1200,\r\n\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n\r\n  soundToggle: {\r\n    position: \"absolute\",\r\n    left: 565,\r\n    top: \"102%\",\r\n    border: \"2px solid black\",\r\n    borderRadius: 3,\r\n    width: 70,\r\n    height: 22,\r\n    padding: 0,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  clock: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    position: \"relative\",\r\n\r\n    width: 300,\r\n    height: 300,\r\n\r\n    \"&:before\": {\r\n      position: \"absolute\",\r\n      display: \"block\",\r\n      content: '\"\"',\r\n      left: \"48%\",\r\n      top: \"48%\",\r\n      width: \"4%\",\r\n      height: \"4%\",\r\n      border: \"1px solid black\",\r\n      borderRadius: \"50%\",\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n\r\n  arrow: {\r\n    position: \"absolute\",\r\n    display: \"block\",\r\n    left: \"50%\",\r\n    bottom: \"50%\",\r\n    content: \"\",\r\n    backgroundColor: \"black\",\r\n    transformOrigin: \"bottom center\",\r\n  },\r\n\r\n  arrowSec: {\r\n    width: \"0.5%\",\r\n    height: \"50%\",\r\n    animation: \"rotateWithOrigin 60000ms linear 1000ms infinite\",\r\n    transform: (useStylesProps) => `rotate(${useStylesProps.renderSecs}deg)`,\r\n  },\r\n  arrowMin: {\r\n    width: \"0.5%\",\r\n    height: \"48%\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"50%\",\r\n    animation: \"rotateWithOrigin 3600000ms linear 1000ms infinite\",\r\n    transform: (useStylesProps) => `rotate(${useStylesProps.renderMins}deg)`,\r\n  },\r\n\r\n  arrowHour: {\r\n    width: \"1.5%\",\r\n    height: \"30%\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"50%\",\r\n    animation: \"rotateWithOrigin 216000000ms linear 1000ms infinite\",\r\n    transform: (useStylesProps) => `rotate(${useStylesProps.renderHours}deg)`,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport arrowSound from \"../audio/arrow.mp3\";\r\nimport { getTime } from \"../utils/utils\";\r\nimport clockImg from \"../images/clock.jpg\";\r\nimport useStyles from './clock-styles'\r\n\r\nexport default function Time() {\r\n  const [time, setTime] = useState(Date.now() + 7200000);\r\n  const [arrow] = useState(new Audio(arrowSound));\r\n  const [isOnSound, setIsOnSound] = useState(false);\r\n  const intervalId = useRef(0);\r\n  const toggleSound = () => {\r\n    setIsOnSound(!isOnSound);\r\n  };\r\n  const { mins, secs, hours } = getTime(time);\r\n  const renderSecs = secs * 6;\r\n  const renderMins = mins * 6;\r\n  const renderHours = hours * 30;\r\n\r\n  const useStylesProps = { renderSecs, renderMins, renderHours };\r\n  const classes = useStyles(useStylesProps);\r\n  const arrowSecStyles = `${classes.arrow} ${classes.arrowSec}`;\r\n  const arrowMinStyles = `${classes.arrow} ${classes.arrowMin}`;\r\n  const arrowHourStyles = `${classes.arrow} ${classes.arrowHour}`;\r\n\r\n  useEffect(() => {\r\n    const startTime = () => {\r\n      intervalId.current = window.setInterval(() => {\r\n        setTime(Date.now() + 7200000);\r\n        isOnSound && arrow.play();\r\n      }, 1000);\r\n    };\r\n    startTime();\r\n    return () => clearInterval(intervalId.current);\r\n  }, [time, arrow, isOnSound]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <div className={classes.clock}>\r\n          <div className={`${classes.arrow} ${classes.dot}`}></div>\r\n          <div className={arrowSecStyles}></div>\r\n          <div className={arrowMinStyles}></div>\r\n          <div className={arrowHourStyles}></div>\r\n          <img src={clockImg} alt=\"clock\" width=\"300\" />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={toggleSound}\r\n          className={classes.soundToggle}\r\n        >\r\n          {isOnSound ? \"sound of\" : \"sound on\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export const getTime = (time) => {\r\n  const hours = (time % (1000 * 60 * 60 * 12)) / (1000 * 60 * 60);\r\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n  return { hours, mins, secs };\r\n};\r\n","import Clock from \"./components/Clock\";\n\nfunction App() {\n  return <Clock />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}